name: Check

on:
  pull_request: {}

jobs:
  audit:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing Ci.
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - uses: EmbarkStudios/cargo-deny-action@e0a440755b184aa50374330fa75cca0f84fcb59a
        with:
          command: check ${{ matrix.checks }}
  fmt:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v39-rust
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - run: just rs-check-fmt

  clippy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v39-rust
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - run: just rs-fetch
      - run: just rs-clippy
      - run: just rs-doc --no-deps

  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: ghcr.io/linkerd/dev:v39-rust
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - run: just rs-fetch
      - run: just rs-test-build
      - run: just rs-test

  rust-toolchain:
    name: rust toolchain
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - run: |
          ex=0

          # Check this workflow against the version in rust-toolchain.
          versions=$(sed -nE 's|.*docker://(.*/)?rust:([^ #]+).*|\2|p' .github/workflows/*)
          for mismatch in $(echo "$versions" | grep -vF "$(cat rust-toolchain)" || true) ; do
            echo "::error file=.github/workflows/rust.yml::Workflow uses incorrect rust version(s): $mismatch"
            ex=$((ex + 1))
          done

          exit $ex
