name: Docker Build
description: Builds linkerd's docker images

inputs:
  docker-registry:
    description: The docker registry used to tag the images
    required: false
    default: cr.l5d.io/linkerd
  docker-target:
    description: The OS-arch the docker build will be targeted to
    required: false
    default: linux-amd64
  docker-push:
    description: Whether to push the built images to the registry
    required: false
    default: ''
  docker-ghcr-token:
    description: GH token with image publishing access
    required: false
  tag:
    description: Tag to use for the built image
    required: true

runs:
  using: composite
  steps:
    - name: Configure cache
      shell: bash
      run: echo "DOCKER_BUILDKIT_CACHE=${{ runner.temp }}/.buildx-cache" >> $GITHUB_ENV
    - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf
      with:
        path: ${{ env.DOCKER_BUILDKIT_CACHE }}
        key: ${{ runner.os }}-buildx-linkerd-extension-init-${{ inputs.tag }}
        restore-keys: ${{ runner.os }}-buildx-linkerd-extension-init-

    - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
    - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
    - uses: linkerd/dev/actions/setup-tools@v45
    - env:
        DOCKER_TARGET: ${{ inputs.docker-target }}
        DOCKER_PUSH: ${{ inputs.docker-push }}
      shell: bash
      run: |
        if [[ -n "${{ inputs.docker-push }}" ]];then
          echo "${{ inputs.docker-ghcr-token }}" | docker login ghcr.io -u $ --password-stdin
        fi
        just build-image ${{ inputs.docker-registry }} ${{ inputs.tag }}

    # Delete older docker images to prevent cache bloat.
    - uses: linkerd/dev/actions/setup-tools@v45
    - shell: bash
      run: just-dev prune-action-cache ${{ env.DOCKER_BUILDKIT_CACHE }}

outputs:
  image:
    description: The image that was built
    value: ${{ inputs.docker-registry }}/extension-init:${{ inputs.tag }}
